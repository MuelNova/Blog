这篇博客文章由nova撰写，记录了他在解决HCTF 2016比赛中的一个堆内存管理题目（fheap）的过程。作者先回顾了题目来源和基本实现：主要涉及两个函数，createStr和deleteStr，分别用于创建和删除字符串。分析中发现了deleteStr存在的漏洞，即未完全清理内存，导致可能的Double Free和Use After Free (UAF)利用。

作者提出了利用此漏洞的方案，通过巧妙地分配和释放内存，覆盖特定位置的指针，实现了对函数地址的重定向，从而可以执行任意代码。文章详细介绍了实验步骤和调试过程，包括地址的泄漏、程序基地址的计算、以及利用ASLR特性进一步推进攻击。

具体过程涵盖了如何覆盖freeShort函数、利用puts函数泄露地址、以及通过格式化字符串漏洞来获得libc基地址。最终，通过推算出system函数的地址，构造出shell命令并成功执行。

nova总结道，这是他面对的第一个较为综合的UAF题目，尽管过程耗费了六七个小时，且尝试了多个不同的方法，最终依然成功完成了挑战。整个过程为他提供了宝贵的经验和思路上的提升。