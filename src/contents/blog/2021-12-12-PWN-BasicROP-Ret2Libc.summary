## 总结

文章由作者nova撰写，主要分享了他在进行CTF（Capture The Flag）比赛中学习并应用ROP（Return-Oriented Programming）技术中的Ret2Libc攻击方法的经验。文章详细介绍了三个不同难度的Ret2Libc攻击实例，并提供了解决每个实例的方法和代码示例。

### Ret2libc1
- 目标是32位无保护的ELF文件；我们通过覆盖返回地址调用`system`函数来执行`/bin/sh`。
- 分析了如何正确计算缓冲区到栈顶的偏移量，并提供了使用GDB和pwndbg的两种方法。
- 详细解释了为何应使用PLT表里的system地址。

### Ret2libc2
- 在Ret2libc1的基础上，通过手动输入构造的字符串来调用system函数。
- 通过GETS函数输入，将`/bin/sh`字符串写入到BSS段的缓冲区地址，然后调用system。
- 提供了两种不同的Payload及相关细节。

### Ret2libc3
- 演示通过延迟绑定泄露已经执行过的函数的真实地址并计算偏移，最终获取system和`/bin/sh`的地址。
- 分析了如何泄露`puts`函数的地址，并计算出libc的基地址。
- 提供了两个详细的EXP以及相关LIBC版本查找方法。

### Advanced: ciscn_2019_c_1
- 涉及64位程序，通过寄存器传参完成Ret2libc攻击。
- 提供了完整的exploit代码，并指出在64位下需要注意栈帧平衡的问题。

### 特别感谢
- 文章最后特别感谢了Mark，他详细指导了作者GDB的用法，并录制了教学视频。

通过这篇详尽的文章，读者可以系统地了解并掌握ROP中的Ret2Libc技术，逐步提升CTF比赛中的实战技能。