博主 nova 在文章中详细介绍了将本地存档转换为服务器存档的完整过程。本文假设读者有一定的技术基础，包括使用 Python3 和 terminal，并已经具备开启服务器的能力。

### 前置条件

在进行存档转换前，需要具备以下条件：
- 安装 Python3
- 下载 [MuelNova/Palworld-Save-Patcher](https://github.com/MuelNova/Palworld-Save-Patcher)
- 准备好需要转换的存档

### 修改过程

1. **服务器存档提取**：首先将本地存档目录 `%SAVE%` 复制到服务器存档位置。原房主登录游戏，创建新用户并进行操作，退出后在 `%SAVE%/Players` 文件夹下会生成一个新的玩家文件，这个文件对应原房主的 GUID。
2. **脚本运行**：关闭服务器，备份 `%SAVE%` 文件夹后，运行脚本对存档进行必要修改。
3. **重新开启服务器**：重新启动服务器后，原房主的存档将被恢复，但需要重新加入好友的服务器来恢复名称和公会信息。

### 存档文件分析

文件主要储存在 `%appllocaldata%\Pal\Saved\SavedGames\<STEAM_ID>\<WORLD_ID>` 目录下，包括：

- `LocalData.sav`：保存地图数据
- `Level.sav`：保存资源、所有者及地图事件信息
- `Player/*.sav`：玩家的个人存档文件

### .sav 文件结构

`.sav` 文件经过 zlib 压缩，包括以下部分：

- `[0:4]`：未压缩大小
- `[4:8]`：压缩后大小
- `[8:11]`：固定的 magicNumber "PlZ"
- `[11]`：压缩类型
- `[12:]`：压缩数据

解压后可转换为 JSON 文件，方便进一步操作。

### 工具

文章推荐使用 `uesave-rs` 库来读取和写入 Unreal Engine 的存档文件，便于将 `.sav` 文件转换为 JSON 文件。

通过这一系列步骤，读者可以有效地将本地存档转换为服务器存档，从而实现跨设备或多用户共享同一游戏世界。