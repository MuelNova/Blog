博客作者nova最近研究了CVE-2023-4911漏洞并进行了复现。这个漏洞存在于glibc 2.34及以后的版本中，是由于处理GLIBC_TUNABLES环境变量时出现的缓存区溢出问题。此漏洞在执行set-user-ID和set-group-ID程序时会以特权模式执行，可能导致本地特权提升。

nova首先搭建了测试环境，包括在Windows 10 x86_64上运行的Ubuntu 22.04.1 LTS和内核5.15.123.1的WSL2，以及glibc 2.35-0ubuntu3.3版本。

他通过观察glibc源码，特别是__tunables_init()函数，发现了漏洞的具体位置。当GLIBC_TUNABLES格式为“GLIBC_TUNABLES=AAA=AAA=BBB”时，程序会出现缓存区溢出。在parsing tunables阶段，由于tunable_is_name的判断条件不再满足，从而退出。

nova通过一系列调试和测试，发现可以利用该漏洞覆盖内存，特别是覆盖ld.so的link_map结构体的指针来获取控制权限。他提出了一种利用思路，通过构建多个GLIBC_TUNABLES环境变量来诱导内存分配，并最终覆盖特定指针指向恶意库，实现获得root权限。

全流程包括超出ld.so的读写段，利用第二个和第三个GLIBC_TUNABLES变量进行溢出，最终在栈上设定恶意指针指向自定义的libc.so.6库，成功执行恶意代码。

博客结尾，nova提供了修复该漏洞的方法，是通过检测输入是否完成(p[len] == '\0')来修补。

整体上，nova详细讲解了整个复现过程，提供了丰富的调试细节和参考资料，为漏洞的利用与修复提供了全面的思路。